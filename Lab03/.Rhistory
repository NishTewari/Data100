knitr::opts_chunk$set(echo = TRUE)
sqrt(1) == 1
1/25 * 25 == 1
sqrt(2)^2 == 2
1/49 * 49 == 1
near(sqrt(2)^2, 2)
install.packages(c("knitr", "lubridate", "nycflights13", "stringr", "tidyverse"))
install.packages("nfcflights13")
install.packages("nycflights13")
glimpsw(flights)
glimpse(flights)
install.packages("nycflights13")
knitr::opts_chunk$set(echo = TRUE)
sqrt(1) == 1
1/25 * 25 == 1
sqrt(2)^2 == 2
1/49 * 49 == 1
near(sqrt(2)^2, 2)
library(nycflights13)
# ---- The next command takes a (relatively) long time -----
# view(flights)
glimpse(flights)
0^1
1^1222
0^0
1^0
ndakj
hello
1^0
100^0
45 + 9000
+192019108241
91 - 199
9290092132131902132090923
12212312 - 1293012390 + 90210211
4400/0
010001100110 01010101 101  + 0
912192219- 101010101100011 + 9999910290192019201
-88192
glimpse(filter(flights, dep_time != NA))
filter(BN, Name == "Leen")
filter(BN, Name == "Snow")
library(tidyverse)
GPS<-read_csv("GooglePlayStore.csv")
BN<-read_csv("BabyNames.csv")
filter(GPS,Installs == "50,000,000 + ")
filter(GPS,Rating >=4.9)
filter(GPS,Installs=="50,000,000+" & Rating<3.7)
filter(GPS,(Installs=="50,000,000+" & Rating<3.7) |(Installs=="5,000+" & Rating==5) )
filter(BN,Name == "Nish")
filter(BN, Name == "Snow")
filter(BN, Name == "Khalessi")
filter(BN, Name == "Leen")
filter(BN, Name == "Khalessi")
filter(BN, Name == "Leen")
filter(BN, Name == "Leen")
filter(BN, Name == "Nish")
filter(BN, Name == "Nish")
filter(BN, Name == "Nish" & (Count<10 | Count> 100))
filter(BN, Name == "Nish" & (Count < 10 | Count > 100))
MYNAME<-filter(BN,Name =="Nish")
MYNAME
arrange(GPS,Rating)
arrange(GPS,desc(Rating))
arrange(GPS,desc(Rating),desc(Reviews))
arrange(BN,desc(Count))
arrange(BN,Name,desc(Count),Gender)
GPS %>%
filter(Installs=="50,000,000+") %>%
arrange(desc(Rating))
BN %>%
filter(Name=="Nish") %>%
arrange(desc(Count))
select(GPS,Rating,Reviews)
library(tidyverse)
GPS<-read_csv("GooglePlayStore.csv")
BN<-read_csv("BabyNames.csv")
filter(GPS,Installs == "50,000,000 + ")
filter(GPS,Rating >=4.9)
filter(GPS,Installs=="50,000,000+" & Rating<3.7)
filter(GPS,xor(Installs=="50,000,000+", Rating<3.7))
filter(GPS,(Installs=="50,000,000+" & Rating<3.7) |(Installs=="5,000+" & Rating==5) )
filter(BN,Name == "Nish")
filter(BN,Year == "2001" & Name == "Nish")
filter(BN, Name == "Snow")
filter(BN, Name == "Khaleesi")
filter(BN, Name == "Nish" & (Count < 10 | Count > 100))
MYNAME<-filter(BN,Name =="Nish")
MYNAME
arrange(GPS,Rating)
arrange(GPS,desc(Rating))
arrange(GPS,desc(Rating),desc(Reviews))
arrange(BN,desc(Count))
arrange(BN,Name,desc(Count),Gender)
GPS %>%
filter(Installs=="50,000,000+") %>%
arrange(desc(Rating))
BN %>%
filter(Name=="Nish") %>%
arrange(desc(Count))
select(GPS,Rating,Reviews)
select(GPS,starts_with("R"))
select(BN,Name,Year,Count)
-c(BN,Name,Year,Count)
select(BN,-c(Id,Gender))
BN %>%
filter(Name=="Nish") %>%
arrange(desc(Count)) %>%
select(-c("Id"))
mutate(GPS,Rounded,Rating=round(Rating))
mutate(GPS,Rounded.Rating=round(Rating))
BN %>%
filter(Name=="Homer") %>%
arrange(desc(Count)) %>%
select(-c("Id"))
filter(BN, Name == "Snow")
filter(BN, Name == "Leen")
filter(BN, Name == "Snow")
filter(BN, Name == "First")
filter(BN, Name == "Snow")
filter(BN, Name == "First")
filter(BN, Name == "Snow")
filter(BN, Name == "Nishant")
filter(BN, Name == "Snow")
filter(BN, Name == "Khaleesi")
BN %>%
filter(Name=="Nish") %>%
arrange(desc(Count)) %>%
select(-c("Id"))
transmute(GPS,Rounded.Rating=round(Rating))
GPS %>%
mutate(Rounded.Rating=round(Rating)) %>%
select(App,Rounded.Rating)
mutate(BN,percent=100*Count/sum(Count))
View(GPS)
summarise(GPS,total.reviews=sum(Reviews,na.rm=TRUE),avg.rating=mean(Rating,na.rm=TRUE))
GPS %>%
group_by(Content_Rating) %>%
summarise(total.reviews=sum(Reviews,na.rm=TRUE),avg.rating=mean(Rating,na.rm=TRUE))
BN %>%
group_by(Gender) %>%
summarise(total=sum(Count))
BN %>%
group_by(Name) %>%
summarise(total=sum(Count)) %>%
arrange(desc(total))
BN %>%
filter(Year>=2000) %>%
group_by(Name) %>%
summarise(total=sum(Count)) %>%
arrange(desc(total))
BN %>%
mutate(percent=100*Count/sum(Count)) %>%
group_by(Name) %>%
summarise(percent=sum(percent)) %>%
arrange(desc(percent))
BN %>%
group_by(Year) %>%
summarise(total=sum(Count)) %>%
ggplot()+geom_line(aes(Year,total))
#Hint: There is no y variable to be stated in a bar chart.
#Part i)
ggplot(RENTALS)+geom_bar(aes(x=Bedrooms))
RENTALS<-read_csv("GTA_Apt_Rentals_2018.csv")
setwd("C:/DATA100/Lab03")
RENTALS<-read_csv("GTA_Apt_Rentals_2018.csv")
library(readr)
RENTALS <- read_csv("GTA_Apt_Rentals_2018.csv")
View(RENTALS)
RENTALS<-read_csv("GTA_Apt_Rentals_2018.csv")
RENTALS
#Hint: There is no y variable to be stated in a bar chart.
#Part i)
ggplot(RENTALS)+geom_bar(aes(x=Bedrooms))
#Hint: There is no y variable to be stated in a bar chart.
#Part i)
ggplot(data = RENTALS)+geom_bar(aes(x=Bedrooms))
library(tidyverse)
#Hint: There is no y variable to be stated in a bar chart.
#Part i)
ggplot(data = RENTALS)+geom_bar(aes(x=Bedrooms))
summary(RENTALS$Bedrooms)
#Part ii)
ggplot(RENTALS)+geom_bar(aes(x=Bathrooms))
summary(RENTALS$Bathrooms)
#Part i)
ggplot(RENTALS)+geom_histogram(aes(x=Latitude),binwidth=2)
summary(RENTALS$Latitude)
#Part ii)
ggplot(RENTALS)+geom_histogram(aes(x=Longitude),binwidth=2)
summary(RENTALS$Longitude)
arrange(RENTALS,desc(lat.diff))
RENTALS<-mutate(RENTALS,lat.diff=Latitude-43.7,long.diff=Longitude+79.4)
RENTALS
arrange(RENTALS,desc(lat.diff))
ggplot(RENTALS2,aes(P,Sq.Ft))+geom_point()+facet_wrap(~Bedrooms)+geom_smooth(method="
lm")
RENTALS2$Bedrooms<-as.factor(RENTALS2$Bedrooms)  #Don't change this line. For reasons that will be explained later in the course, we need to change the variable type for bedrooms before creating the boxplot. Input the ggplot(...) command below.
c(summary(RENTALS2$P),st.dev=sd(RENTALS2$P,na.rm=TRUE))
RENTALS2<-mutate(RENTALS2,P=ifelse(Price<1000|Price>4000,NA,Price))
library(tidyverse)
library(readr)
BEERS <- read_csv("C:/DATA100/Lab04/Beers.csv")
View(BEERS)
is_tibble(BEER)
is.data.frame(BEER)
is.data.frame(BEER)
BEER<-transform(BEER,Type=as.character(Type),Flavour=as.character(Flavour))
BEER<-read.csv("Beers.csv",header=TRUE,sep=",")
BEER
library(tidyverse)
BEER<-transform(BEER,Type=as.character(Type),Flavour=as.character(Flavour))
BEER
is.data.frame(BEER)
is_tibble(BEER)
BEER<-as.data.frame(BEER)
is_tibble(BEER)
library(tidyverse)
BEER<-read.csv("Beers.csv",header=TRUE,sep=",")
BEER
BEER<-transform(BEER,Type=as.character(Type),Flavour=as.character(Flavour))
BEER
is.data.frame(BEER)
is_tibble(BEER)
BEER<-as.data.frame(BEER)
is_tibble(BEER)
view(BEER)
view(BEER)
DATA<-tibble(x=1:5,y=c(2.5,4,6.3,8,10),z=c("a","a","a","a","a"))
DATA
BEER<-read_csv("Beers.csv",header=TRUE,sep=",")
BEER<-read_csv("Beers.csv",header=TRUE,sep=",")
BEER<-read_csv("Beers_csv",header=TRUE,sep=",")
z = 1
z = 1
z = 1
BEER<-read.csv("Beers.csv",header=TRUE,sep=",")
BEER
BEER<-read_csv("Beers.csv",header=TRUE,sep=",")
BEER<-read_csv("Beers.csv")
BEER
BEER<-read_csv("Beers.csv",col_types=cols(ID=col_integer()))
BEER
guess_parser(Flavour)
guess_parser(BEER$Flavour)
